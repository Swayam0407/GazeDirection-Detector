{
  "version": 3,
  "sources": ["../index.tsx", "../lib/polyfill.ts", "../lib/components/InferenceResult.tsx", "esbuild-css-modules-plugin-namespace:/tmp/tmp-2127-smEJ4qxU0mxx/react/lib/components/index.module.css.js", "../lib/context/InferenceContext.tsx", "../lib/components/Annotation/index.tsx", "esbuild-css-modules-plugin-namespace:/tmp/tmp-2127-sW945xwHpztD/react/lib/components/index.module.css.js", "../lib/components/PhotoCollector.tsx", "esbuild-css-modules-plugin-namespace:/tmp/tmp-2127-W2O9JkCva7ZL/react/lib/components/index.module.css.js"],
  "sourcesContent": ["import './lib/polyfill';\nexport * from './lib/components/InferenceResult';\nexport * from './lib/components/PhotoCollector';\nexport * from './lib/context/InferenceContext';\n", "/**\n * window.OffscreenCanvas\n * https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\n */\nif (typeof window !== 'undefined' && !window.OffscreenCanvas) {\n  // @ts-ignore\n  window.OffscreenCanvas = class OffscreenCanvas {\n    canvas: any;\n    constructor(width: number, height: number) {\n      this.canvas = document.createElement('canvas');\n      this.canvas.width = width;\n      this.canvas.height = height;\n\n      this.canvas.convertToBlob = () => {\n        return new Promise(resolve => {\n          this.canvas.toBlob(resolve);\n        });\n      };\n\n      return this.canvas;\n    }\n  };\n}\n\nexport default {};\n", "import {\n  predictionsToAnnotations,\n  getInferenceResult,\n  InferenceResult as InferenceResultType,\n  ApiError\n} from 'landingai';\nimport styles from './index.module.css';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useInferenceContext } from '../context/InferenceContext';\nimport { AnnotationComponent, LabelName } from './Annotation';\n\nexport interface InferenceResultProps {\n  image?: Blob;\n  /**\n   * Show labels for predicted annotations. Default is false.\n   */\n  showLabels?: boolean;\n  /**\n   * Called when there is predict error.\n   */\n  onPredictError?: (err: ApiError) => void;\n}\n\n/**\n * Inference result component.\n * \n * Renders the image, calls predict API and renders predictions over the image.\n * \n * Also provides summaries of the results.\n */\nexport const InferenceResult: React.FC<InferenceResultProps> = (props) => {\n  const { image, showLabels = false, onPredictError } = props;\n  const apiInfo = useInferenceContext();\n\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  // inference results\n  const [inferenceResult, setInferenceResult] = useState<InferenceResultType>();\n  const annotations = useMemo(() => {\n    return predictionsToAnnotations(inferenceResult);\n  }, [inferenceResult]);\n  const className = useMemo(() => {\n    return inferenceResult?.predictions?.labelName ?? '';\n  }, [inferenceResult]);\n\n  const [isLoading, setIsLoading] = useState<Boolean>(false);\n  const [preview, setPreview] = useState<string>();\n\n  const annotationCounts = useMemo(() => {\n    const labelCountByName = annotations.reduce((acc, ann) => ({\n      ...acc,\n      [ann.name]: {\n        name: ann.name,\n        color: ann.color,\n        count: ((acc[ann.name] as any)?.count ?? 0) + 1,\n      }\n    }), {} as Record<string, { name: string, color: string, count: number }>);\n    return Object.values(labelCountByName);\n  }, [annotations]);\n\n  const onPredict = useCallback(\n    async (image: Blob) => {\n      try {\n        setIsLoading(true);\n        const result = await getInferenceResult(apiInfo, image);\n        setInferenceResult(result);\n      } catch (err) {\n        onPredictError?.(err as any);\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [apiInfo]\n  );\n\n  useEffect(() => {\n    if (image) {\n      const objectUrl = URL.createObjectURL(image);\n      setPreview(objectUrl);\n\n      // free memory when ever this component is unmounted\n      return () => URL.revokeObjectURL(objectUrl);\n    }\n  }, [image]);\n\n  useEffect(() => {\n    if (image) {\n      onPredict(image);\n    }\n  }, [image, onPredict]);\n\n  return (\n    <>\n      <div className={styles.inferenceResult} data-testid=\"inference-result\">\n        {!preview && (\n          <div className={styles.photoPlaceholder}>\n            Your image will be displayed here.\n          </div>\n        )}\n        {/* Image and annotations like boxes / segemtation_mask */}\n        {preview && (\n          <div className={styles.imageContainer}>\n            <img\n              className={`${styles.preview} ${isLoading ? styles.blur : ''}`}\n              ref={imageRef}\n              src={preview}\n              alt=\"result\"\n              width=\"100%\"\n              style={{ verticalAlign: 'middle' }}\n            />\n            {imageRef.current && !isLoading &&\n              annotations.map((annotation) => (\n                <AnnotationComponent\n                  key={annotation.id}\n                  annotation={annotation}\n                  imageWidth={imageRef.current!.naturalWidth}\n                  imageHeight={imageRef.current!.naturalHeight}\n                  showLabel={showLabels}\n                />\n              ))}\n            {isLoading && <div className={styles.ring}></div>}\n          </div>\n        )}\n        {/* Summaries of predictions */}\n        {preview && !isLoading && !!inferenceResult && <div className={styles.inferenceSummary}>\n          {inferenceResult?.type === 'ClassificationPrediction' && !inferenceResult.backbonetype && <div>Class: {className}</div>}\n          {inferenceResult.backbonetype === 'ObjectDetectionPrediction' && (\n            <>\n              <div>Total: {annotations.length} objects detected</div>\n              {annotationCounts.map(({ name, count, color }) => (\n                <div className={styles.labelNameCount} key={name}>\n                  <span>Number of <LabelName name={name} color={color} /></span>\n                  <span>{count}</span>\n                </div>\n              ))}\n            </>\n          )}\n          {(inferenceResult?.type === 'SegmentationPrediction' || inferenceResult.backbonetype === 'SegmentationPrediction') && (\n            <>\n              <div>Legend</div>\n              <div className={styles.legend}>\n                {annotationCounts.map(({ name, color }) => (\n                  <div className={styles.labelNameCount} key={name}>\n                    <span><LabelName name={name} color={color} /></span>\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        </div>}\n      </div>\n    </>\n  );\n};\n", "\nconst digest = 'c2b33efeeb0a7da04293235a97a603c4606969d3387e85216f367c95af957bdb';\nconst css = `._bottomButton_lf6du_1 {\n  margin-top: auto;\n  margin-bottom: 8px;\n}\n\n._inputGroup_lf6du_6 {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n}\n\n._errorLabel_lf6du_12 {\n  color: red;\n}\n\n._inferenceResult_lf6du_16 {\n  position: relative;\n  margin-top: 16px;\n}\n\n._inferenceSummary_lf6du_21 {\n  margin: 16px 0;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  gap: 12px;\n  background-color: #f4f4f4;\n  min-height: 5rem;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 0.25rem;\n}\n\n._boxAnnotation_lf6du_34 {\n  position: absolute;\n  border-width: 2px;\n  border-style: solid;\n}\n\n._segAnnotation_lf6du_40 {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n._labelNameCount_lf6du_48 {\n  display: flex;\n  justify-content: space-between;\n  font-weight: 300;\n}\n\n._text_lf6du_54 {\n  position: absolute;\n  font-size: 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 6px;\n  border-radius: 4px;\n  outline-width: 1px;\n  outline-style: solid;\n}\n\n._imageContainer_lf6du_66 {\n  position: relative;\n}\n\n._preview_lf6du_70 {\n  border-radius: 0.25rem;\n}\n\n._photoPlaceholder_lf6du_74 {\n  width: 100%;\n  background-color: #f4f4f4;\n  padding: 12px;\n  padding-bottom: 100%;\n  border-radius: 0.25rem;\n}\n\n._photoCollectorContainer_lf6du_82 {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n._photoCollectorButton_lf6du_88 {\n  height: 3rem;\n  font-size: 1rem;\n}\n\n._fileInput_lf6du_93 {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n._blur_lf6du_100 {\n  filter: blur(0.5rem);\n}\n\n._ring_lf6du_104 {\n  display: inline-block;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 80px;\n  height: 80px;\n}\n\n._ring_lf6du_104:after {\n  content: \" \";\n  display: block;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border-radius: 50%;\n  border: 6px solid #0056fe;\n  border-color: #0056fe transparent #0056fe transparent;\n  animation: _ring_lf6du_104 1.2s linear infinite;\n}\n\n@keyframes _ring_lf6du_104 {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n._labelName_lf6du_48 {\n  padding: 0.1rem 0.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid transparent;\n}\n\n._legend_lf6du_141 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n._legend_lf6du_141 ._labelNameCount_lf6du_48 + ._labelNameCount_lf6du_48 {\n  margin-left: 0.5rem;\n}`;\n\n(function() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  if (!document.getElementById(digest)) {\n    var el = document.createElement('style');\n    el.id = digest;\n    el.textContent = css;\n    document.head.appendChild(el);\n  }\n})();\n    \nexport default {\"bottomButton\":\"_bottomButton_lf6du_1\",\"inputGroup\":\"_inputGroup_lf6du_6\",\"errorLabel\":\"_errorLabel_lf6du_12\",\"inferenceResult\":\"_inferenceResult_lf6du_16\",\"inferenceSummary\":\"_inferenceSummary_lf6du_21\",\"boxAnnotation\":\"_boxAnnotation_lf6du_34\",\"segAnnotation\":\"_segAnnotation_lf6du_40\",\"labelNameCount\":\"_labelNameCount_lf6du_48\",\"text\":\"_text_lf6du_54\",\"imageContainer\":\"_imageContainer_lf6du_66\",\"preview\":\"_preview_lf6du_70\",\"photoPlaceholder\":\"_photoPlaceholder_lf6du_74\",\"photoCollectorContainer\":\"_photoCollectorContainer_lf6du_82\",\"photoCollectorButton\":\"_photoCollectorButton_lf6du_88\",\"fileInput\":\"_fileInput_lf6du_93\",\"blur\":\"_blur_lf6du_100\",\"ring\":\"_ring_lf6du_104\",\"labelName\":\"_labelName_lf6du_48\",\"legend\":\"_legend_lf6du_141\"};\nexport { css, digest };\n  ", "import { ApiInfo } from 'landingai';\nimport { createContext, useContext } from 'react';\n\nexport type InferenceContextState = ApiInfo;\n\nexport const initialInferenceContext: InferenceContextState = {\n  endpoint: '',\n  key: '',\n  secret: '',\n};\n\nexport const InferenceContext = createContext(initialInferenceContext);\n\nexport const useInferenceContext = () => useContext(InferenceContext);", "import { isDark, Annotation, convertCompressedBitMapToBlob } from 'landingai';\nimport styles from '../index.module.css';\nimport React, { CSSProperties, useEffect, useMemo, useState } from 'react';\n\ninterface LabelNameProps {\n  name: string;\n  color: string;\n}\n\nexport function LabelName(props: LabelNameProps) {\n  const { name, color } = props;\n  const textColor = isDark(color) ? 'white': 'black';\n  return (\n    <span style={{ backgroundColor: color, color: textColor, borderColor: textColor }} className={styles.labelName}>\n      {name}\n    </span>\n  );\n}\n\ninterface AnnotationComponentProps {\n  annotation: Annotation;\n  imageWidth: number;\n  imageHeight: number;\n  showLabel?: boolean;\n}\n\nexport function AnnotationComponent(props: AnnotationComponentProps) {\n  const { annotation } = props;\n  if (annotation.coordinates) {\n    return <BoxAnnotationComponent {...props} />;\n  }\n  if (annotation.bitmap) {\n    return <SegAnnotationComponent {...props} />;\n  }\n  return <></>;\n}\n\nfunction BoxAnnotationComponent(props: AnnotationComponentProps) {\n  const { annotation, imageWidth, imageHeight, showLabel = false } = props;\n\n  const style = useMemo(() => {\n    const { coordinates, color } = annotation;\n    if (coordinates) {\n      const { xmin, xmax, ymin, ymax } = coordinates;\n      const width = xmax - xmin;\n      const height = ymax - ymin;\n      return {\n        left: `${(100 * xmin) / imageWidth}%`,\n        top: `${(100 * ymin) / imageHeight}%`,\n        width: `${(100 * width) / imageWidth}%`,\n        height: `${(100 * height) / imageHeight}%`,\n        borderColor: color,\n      } as React.CSSProperties;\n    }\n    return {} as React.CSSProperties;\n  }, [annotation, imageHeight, imageWidth]);\n\n  const textBoundingRectStyles = useMemo(() => {\n    const { color } = annotation;\n    return {\n      left: 0,\n      top: -4,\n      backgroundColor: color,\n      color: isDark(color) ? 'white' : 'black',\n      outlineColor: isDark(color) ? 'white' : 'black',\n      transform: 'translateY(-100%)',\n    } as CSSProperties;\n  }, [annotation, imageHeight, imageWidth]);\n\n  return (\n    <div className={styles.boxAnnotation} style={style}>\n      {showLabel && (\n        <div className={styles.text} style={textBoundingRectStyles}>\n          {annotation.name}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction SegAnnotationComponent(props: AnnotationComponentProps) {\n  const { annotation, imageWidth, imageHeight } = props;\n  const { bitmap, color } = annotation;\n  if (!bitmap) {\n    return null;\n  }\n\n  const [imgSrc, setImgSrc] = useState<string>();\n  useEffect(() => {\n    let url: string | undefined = undefined;\n    convertCompressedBitMapToBlob(bitmap, color, imageWidth, imageHeight).then(res => {\n      url = URL.createObjectURL(res);\n      setImgSrc(url);\n    });\n    return () => {\n      if (url) {\n        URL.revokeObjectURL(url);\n      }\n    };\n  }, []);\n\n  if (!imgSrc) {\n    return null;\n  }\n\n  return (\n    <img className={styles.segAnnotation} src={imgSrc} />\n  );\n}", "\nconst digest = 'ecc1fcf55f61d69588370fbc1b65337fe3c193925dc3efe9488d7bc375b3141d';\nconst css = `._bottomButton_lf6du_1 {\n  margin-top: auto;\n  margin-bottom: 8px;\n}\n\n._inputGroup_lf6du_6 {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n}\n\n._errorLabel_lf6du_12 {\n  color: red;\n}\n\n._inferenceResult_lf6du_16 {\n  position: relative;\n  margin-top: 16px;\n}\n\n._inferenceSummary_lf6du_21 {\n  margin: 16px 0;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  gap: 12px;\n  background-color: #f4f4f4;\n  min-height: 5rem;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 0.25rem;\n}\n\n._boxAnnotation_lf6du_34 {\n  position: absolute;\n  border-width: 2px;\n  border-style: solid;\n}\n\n._segAnnotation_lf6du_40 {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n._labelNameCount_lf6du_48 {\n  display: flex;\n  justify-content: space-between;\n  font-weight: 300;\n}\n\n._text_lf6du_54 {\n  position: absolute;\n  font-size: 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 6px;\n  border-radius: 4px;\n  outline-width: 1px;\n  outline-style: solid;\n}\n\n._imageContainer_lf6du_66 {\n  position: relative;\n}\n\n._preview_lf6du_70 {\n  border-radius: 0.25rem;\n}\n\n._photoPlaceholder_lf6du_74 {\n  width: 100%;\n  background-color: #f4f4f4;\n  padding: 12px;\n  padding-bottom: 100%;\n  border-radius: 0.25rem;\n}\n\n._photoCollectorContainer_lf6du_82 {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n._photoCollectorButton_lf6du_88 {\n  height: 3rem;\n  font-size: 1rem;\n}\n\n._fileInput_lf6du_93 {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n._blur_lf6du_100 {\n  filter: blur(0.5rem);\n}\n\n._ring_lf6du_104 {\n  display: inline-block;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 80px;\n  height: 80px;\n}\n\n._ring_lf6du_104:after {\n  content: \" \";\n  display: block;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border-radius: 50%;\n  border: 6px solid #0056fe;\n  border-color: #0056fe transparent #0056fe transparent;\n  animation: _ring_lf6du_104 1.2s linear infinite;\n}\n\n@keyframes _ring_lf6du_104 {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n._labelName_lf6du_48 {\n  padding: 0.1rem 0.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid transparent;\n}\n\n._legend_lf6du_141 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n._legend_lf6du_141 ._labelNameCount_lf6du_48 + ._labelNameCount_lf6du_48 {\n  margin-left: 0.5rem;\n}`;\n\n(function() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  if (!document.getElementById(digest)) {\n    var el = document.createElement('style');\n    el.id = digest;\n    el.textContent = css;\n    document.head.appendChild(el);\n  }\n})();\n    \nexport default {\"bottomButton\":\"_bottomButton_lf6du_1\",\"inputGroup\":\"_inputGroup_lf6du_6\",\"errorLabel\":\"_errorLabel_lf6du_12\",\"inferenceResult\":\"_inferenceResult_lf6du_16\",\"inferenceSummary\":\"_inferenceSummary_lf6du_21\",\"boxAnnotation\":\"_boxAnnotation_lf6du_34\",\"segAnnotation\":\"_segAnnotation_lf6du_40\",\"labelNameCount\":\"_labelNameCount_lf6du_48\",\"text\":\"_text_lf6du_54\",\"imageContainer\":\"_imageContainer_lf6du_66\",\"preview\":\"_preview_lf6du_70\",\"photoPlaceholder\":\"_photoPlaceholder_lf6du_74\",\"photoCollectorContainer\":\"_photoCollectorContainer_lf6du_82\",\"photoCollectorButton\":\"_photoCollectorButton_lf6du_88\",\"fileInput\":\"_fileInput_lf6du_93\",\"blur\":\"_blur_lf6du_100\",\"ring\":\"_ring_lf6du_104\",\"labelName\":\"_labelName_lf6du_48\",\"legend\":\"_legend_lf6du_141\"};\nexport { css, digest };\n  ", "import React from 'react';\nimport styles from './index.module.css';\nimport { EImageType, compress } from 'image-conversion';\n\nexport type PhotoCollectorProps = {\n  setImage: (image: Blob) => void;\n};\n\n/**\n * Photo collector. This component will compress image so that:\n * 1. The image does not go too large\n * 2. EXIF attributes, such as orientations, are removed\n */\nexport const PhotoCollector: React.FC<PhotoCollectorProps> = (props) => {\n  const { setImage } = props;\n\n  const capture = async (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const files = (e.target as HTMLInputElement).files;\n    if (files?.length && files[0]) {\n      // Compress to remove EXIF information like orientation\n      const compressed = await compress(files[0], {\n        size: 1000,\n        type: EImageType.JPEG,\n        quality: 0.9,\n      });\n      setImage(compressed);\n    }\n  };\n\n  return (\n    <div className={styles.photoCollectorContainer} aria-label=\"Select a photo\">\n      <button className={styles.photoCollectorButton}>Select a photo</button>\n      <input onChange={capture} className={styles.fileInput} type=\"file\" accept=\"image/*;capture=camera\" data-testid=\"select-photo-input\" />\n    </div>\n  );\n};\n", "\nconst digest = '4039e5cd3cba6bbc3d309eb0abe8f06aedffc8892935a6883e152080024f593d';\nconst css = `._bottomButton_lf6du_1 {\n  margin-top: auto;\n  margin-bottom: 8px;\n}\n\n._inputGroup_lf6du_6 {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n}\n\n._errorLabel_lf6du_12 {\n  color: red;\n}\n\n._inferenceResult_lf6du_16 {\n  position: relative;\n  margin-top: 16px;\n}\n\n._inferenceSummary_lf6du_21 {\n  margin: 16px 0;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  gap: 12px;\n  background-color: #f4f4f4;\n  min-height: 5rem;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 0.25rem;\n}\n\n._boxAnnotation_lf6du_34 {\n  position: absolute;\n  border-width: 2px;\n  border-style: solid;\n}\n\n._segAnnotation_lf6du_40 {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n._labelNameCount_lf6du_48 {\n  display: flex;\n  justify-content: space-between;\n  font-weight: 300;\n}\n\n._text_lf6du_54 {\n  position: absolute;\n  font-size: 0.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2px 6px;\n  border-radius: 4px;\n  outline-width: 1px;\n  outline-style: solid;\n}\n\n._imageContainer_lf6du_66 {\n  position: relative;\n}\n\n._preview_lf6du_70 {\n  border-radius: 0.25rem;\n}\n\n._photoPlaceholder_lf6du_74 {\n  width: 100%;\n  background-color: #f4f4f4;\n  padding: 12px;\n  padding-bottom: 100%;\n  border-radius: 0.25rem;\n}\n\n._photoCollectorContainer_lf6du_82 {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n._photoCollectorButton_lf6du_88 {\n  height: 3rem;\n  font-size: 1rem;\n}\n\n._fileInput_lf6du_93 {\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n._blur_lf6du_100 {\n  filter: blur(0.5rem);\n}\n\n._ring_lf6du_104 {\n  display: inline-block;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 80px;\n  height: 80px;\n}\n\n._ring_lf6du_104:after {\n  content: \" \";\n  display: block;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border-radius: 50%;\n  border: 6px solid #0056fe;\n  border-color: #0056fe transparent #0056fe transparent;\n  animation: _ring_lf6du_104 1.2s linear infinite;\n}\n\n@keyframes _ring_lf6du_104 {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n._labelName_lf6du_48 {\n  padding: 0.1rem 0.5rem;\n  border-radius: 0.3rem;\n  border: 1px solid transparent;\n}\n\n._legend_lf6du_141 {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n._legend_lf6du_141 ._labelNameCount_lf6du_48 + ._labelNameCount_lf6du_48 {\n  margin-left: 0.5rem;\n}`;\n\n(function() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  if (!document.getElementById(digest)) {\n    var el = document.createElement('style');\n    el.id = digest;\n    el.textContent = css;\n    document.head.appendChild(el);\n  }\n})();\n    \nexport default {\"bottomButton\":\"_bottomButton_lf6du_1\",\"inputGroup\":\"_inputGroup_lf6du_6\",\"errorLabel\":\"_errorLabel_lf6du_12\",\"inferenceResult\":\"_inferenceResult_lf6du_16\",\"inferenceSummary\":\"_inferenceSummary_lf6du_21\",\"boxAnnotation\":\"_boxAnnotation_lf6du_34\",\"segAnnotation\":\"_segAnnotation_lf6du_40\",\"labelNameCount\":\"_labelNameCount_lf6du_48\",\"text\":\"_text_lf6du_54\",\"imageContainer\":\"_imageContainer_lf6du_66\",\"preview\":\"_preview_lf6du_70\",\"photoPlaceholder\":\"_photoPlaceholder_lf6du_74\",\"photoCollectorContainer\":\"_photoCollectorContainer_lf6du_82\",\"photoCollectorButton\":\"_photoCollectorButton_lf6du_88\",\"fileInput\":\"_fileInput_lf6du_93\",\"blur\":\"_blur_lf6du_100\",\"ring\":\"_ring_lf6du_104\",\"labelName\":\"_labelName_lf6du_48\",\"legend\":\"_legend_lf6du_141\"};\nexport { css, digest };\n  "],
  "mappings": "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",
  "names": ["react_exports", "__export", "InferenceContext", "InferenceResult", "PhotoCollector", "initialInferenceContext", "useInferenceContext", "__toCommonJS", "width", "height", "resolve", "import_landingai", "digest", "css", "el", "index_module_css_default", "import_react", "import_react", "initialInferenceContext", "InferenceContext", "useInferenceContext", "import_landingai", "digest", "css", "el", "index_module_css_default", "import_react", "LabelName", "props", "name", "color", "textColor", "React", "index_module_css_default", "AnnotationComponent", "annotation", "BoxAnnotationComponent", "SegAnnotationComponent", "imageWidth", "imageHeight", "showLabel", "style", "coordinates", "xmin", "xmax", "ymin", "ymax", "width", "height", "textBoundingRectStyles", "bitmap", "imgSrc", "setImgSrc", "url", "res", "InferenceResult", "props", "image", "showLabels", "onPredictError", "apiInfo", "useInferenceContext", "imageRef", "inferenceResult", "setInferenceResult", "annotations", "className", "_a", "_b", "isLoading", "setIsLoading", "preview", "setPreview", "annotationCounts", "labelCountByName", "acc", "ann", "onPredict", "result", "err", "objectUrl", "React", "index_module_css_default", "annotation", "AnnotationComponent", "name", "count", "color", "LabelName", "import_react", "digest", "css", "el", "index_module_css_default", "import_image_conversion", "PhotoCollector", "props", "setImage", "capture", "e", "files", "compressed", "React", "index_module_css_default"]
}
